import sys
import os
import csv
import pefile
from collections import defaultdict
from sklearn.neural_network import MLPClassifier

def load_imports():
    imports = list()
    file = open('../data/imports.txt', 'r')
    for dll in file:
        imports.append(dll.rstrip())
    return imports

def main():
    # Load Everything
    d = sys.argv[1]
    imports = load_imports()
    o = open(f'../outputs/{d}_bitmaps.csv', 'w')
    o_writer = csv.writer(o, delimiter=',')

    with open(f'../malware/{d}.csv', 'r') as f:
        reader = csv.reader(f)
        t = defaultdict(str)
        for row in reader:
            t[str(row[0])] = str(row[6])

    # Go Through Files
    files = os.listdir(f'../malware/{d}')
    counter = 1
    total = len(files)
    for file in files:
        print(f'Processing {counter}/{total}')
        counter += 1
        bitmap = ''
        dlls = set()
        try:
            pe = pefile.PE(f'../malware/{d}/{file}', fast_load = True)
            pe.parse_data_directories()
            for entry in pe.DIRECTORY_ENTRY_IMPORT:
                dlls.add(entry.dll.decode().lower())
                    
        except:
            pass
        for dll in imports:
            if dll in dlls:
                bitmap += '1'
            else:
                bitmap += '0'
        o_writer.writerow([file, t[file], bitmap])

    o.close()
    print(f'Output written to outputs/{d}_bitmaps.csv')   
    

if __name__ == '__main__':
    main()  