import tkinter
from lib.models import bitmap_model, binary_model, virustotal_model
from lib.funcs import load_imports, is_pe
from json import dump, load
from time import sleep

def main():
    tkinter.Tk().withdraw()
    imports = load_imports()

    begin_id = '202460'
    run = False

    test_file_directory = '../malware/test/'
    test_file_data = open('../malware/test.csv', 'r')
    test_files_results = open('test_results.txt', 'a')
    with open('test_results.json', 'r') as fp:
        results = load(fp)
    for line in test_file_data:
        fields = line.split(',')
        id = fields[0]
        if run == False and str(id) != begin_id:
            continue
        run = True
        print(id)
        _list = fields[6]
        filename = test_file_directory + id
        r1 = bitmap_model(filename, imports)
        r2 = virustotal_model(filename, imports)
        if r2 == 'Unknown':
            with open('test_results.json', 'w') as fp:
                dump(results, fp)
            test_file_data.close()
            test_files_results.close()
            print(f'\nProgram ended while processing id {id}, begin with this file.')
            exit()
        r3 = binary_model(filename, imports)
        op = 0
        if r1.lower() == 'blacklist':
            op = op - 1
        elif r1.lower() == 'whitelist':
            op = op + 1
        if r2.lower() == 'blacklist':
            op = op - 1
        elif r2.lower() == 'whitelist':
            op = op + 1
        if r3.lower() == 'blacklist':
            op = op - 1
        elif r3.lower() == 'whitelist':
            op = op + 1
        
        if op < 0:
            test_files_results.write(f'{id} - {_list}: BLACKLIST (bitmap: {r1}, vt: {r2}, binary: {r3})\n')
            if _list.lower() == 'blacklist':
                results['num_correct'] = results['num_correct'] + 1
                results['correct'].append(str(id))
            else:
                results['num_incorrect'] = results['num_incorrect'] + 1
                results['incorrect'].append(str(id))
        elif op > 0:
            test_files_results.write(f'{id} - {_list}: WHITELIST (bitmap: {r1}, vt: {r2}, binary: {r3})\n')
            if _list.lower() == 'whitelist':
                results['num_correct'] = results['num_correct'] + 1
                results['correct'].append(str(id))
            else:
                results['num_incorrect'] = results['num_incorrect'] + 1
                results['incorrect'].append(str(id))
        else:
            test_files_results.write(f'{id} - {_list}: UNKNOWN (bitmap: {r1}, vt: {r2}, binary: {r3})\n')
            results['num_unknown'] = results['num_unknown'] + 1
            results['unknown'].append(str(id))
        
        sleep(0.5)
    
    with open('test_results.json', 'w') as fp:
        dump(results, fp)
    test_file_data.close()
    test_files_results.close()
    print(f'\nProgram ended')

if __name__ == '__main__':
    main()
