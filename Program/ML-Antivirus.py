import sys
import tkinter
from tkinter import filedialog
from lib.models import bitmap_model, binary_model, virustotal_model
from lib.funcs import load_imports, clr, is_pe, write_iat
from time import sleep

# Helper function to print all mode options
def print_options():
    print('''
Welcome to Machine Learning Antivirus!\n
Modes:
    1) Print the Import Access Table of inputted file to output of your choosing
    2) Compare input file to all three models for classification
    3) Classify input file with Bitmap Model
    4) Classify input file with VirusTotal Model
    5) Classify input file with NGrams Model
    ''')

    mode = input('Select mode: ')
    return mode

# Driver
def main():
    # Initialize
    tkinter.Tk().withdraw()
    clr()
    imports = load_imports()
    mode = print_options()

    # Check Valid Input
    while not (mode == '1' or mode == '2' or mode == '3' or mode == '4' or mode == '5'):
        print('Invalid mode...')
        sleep(1)
        clr()
        mode = print_options()
    mode = int(mode)

    # Get File
    file = filedialog.askopenfile(title='Select a file to analyze.')
    if not file:
        print('No file selected...')
        exit()
    file = file.name

    # Check if file is PE
    if not is_pe(file):
        print('\nFile is not PE...')
        exit()

    # Modes:
    if mode == 1:
        output = filedialog.asksaveasfile(title='Select destination for IAT file.', defaultextension=".txt", filetypes=[('Text', '.txt'), ('All files', '*.*')])
        if not output:
            print('No output specified...')
            exit()
        write_iat(file, output)

    elif mode == 2:
        r1 = bitmap_model(file, imports)
        r2 = virustotal_model(file, imports)
        r3 = binary_model(file, imports)
        
        rs1 = 0 if r1 == 'Blacklist' else 1
        rs2 = 0 if r2 == 'Blacklist' else 1
        rs3 = 0 if r3 == 'Blacklist' else 1
        print('Blacklist') if sum([rs1, rs2, rs3]) / 3 < 1.5 else print('Whitelist')

    elif mode == 3:
        r = bitmap_model(file, imports)
        print(r)

    elif mode == 4:
        r = virustotal_model(file, imports)
        print(r)

    elif mode == 5:
        r = binary_model(file, imports)
        print(r)


if __name__ == '__main__':
    main()
