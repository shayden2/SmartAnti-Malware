import csv
import json
import os
import pefile
from .classes import Engine

def clr():
    os.system('cls' if os.name == 'nt' else 'clear')

def is_pe(file):
    # Check if PE File
    f = open(file, "rb")
    header = f.read(2).decode()
    if header != 'MZ':
        return False
    return True

def load_imports():
    imports = list()

    with open('config.json') as j:
        data = json.load(j)
        path = data['imports-file']

        with open(f'../data/{path}') as f:
            for dll in f:
                imports.append(dll.rstrip())

    return imports

def write_iat(file, iat):
    pe = pefile.PE(file, fast_load = True)
    pe.parse_data_directories()
    for entry in pe.DIRECTORY_ENTRY_IMPORT:
        iat.write(f'{entry.dll.decode()}\n')
        for func in entry.imports:
            try:
                iat.write(f'\t {hex(func.address)}, {func.name.decode()}\n')
            except:
                iat.write('\tNone.\n')
    print(f'IAT loaded into {iat.name}')
    iat.close()

def read_engines(engines, weights):
    with open('data/engines.txt') as fp:
        while True:
            cur_pos = fp.tell()
            has_another_line = bool(fp.readline())
            if not has_another_line:
                break
            fp.seek(cur_pos)

            name = fp.readline().split(' ')[1].strip()
            correct = int(fp.readline().split(' ')[2].strip())
            incorrect = int(fp.readline().split(' ')[2].strip())
            unknown = int(fp.readline().split(' ')[2].strip())

            engine = Engine(name, correct, incorrect, unknown)
            engines[name] = engine
            weights[name] = int(engine.cdp * engine.decisions)

            fp.readline()
            fp.readline()
    
    return (engines, weights)